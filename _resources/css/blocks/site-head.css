.site-head {
	--site-head-space: 1rem;
	line-height: 1;
	position: sticky;
	top: 0;
	z-index: 10;
	padding-bottom: var(--space-m-l);
	overflow: hidden;
}
.site-head .inner {
	padding-top: var(--space-xs-s);
	padding-bottom: var(--space-xs-s);
	border-bottom: 2px solid;
	background: var(--color-light);
}
.site-head .brand {
	transform: translateY(10px);
}

.site-head svg {
	height: 4ex;
}

/* menu styles. TODO: must refactor to completely rely on my design tokens. */

@media (min-width: 48em) {
	.site-head nav {
		--nav-button-display: none;
		--nav-position: static;
	}

	.site-head ul {
		--nav-list-background: transparent;
		--nav-list-layout: row;
		--nav-list-position: static;
		--nav-list-padding: 0;
		--nav-list-height: auto;
		--nav-list-width: 100%;
		--nav-list-shadow: none;
		--nav-list-transform: none;
		--nav-list-visibility: visible;
	}
}

.site-head nav {
	position: var(--nav-position, fixed);
	inset-block-start: 1rem;
	inset-inline-end: 1rem;
}

/* Remove default list styling and create layout for list */
.site-head ul {
	background: var(--nav-list-background, var(--color-light));
	box-shadow: var(--nav-list-shadow, -5px 0 11px 0 rgb(0 0 0 / 0.2));
	display: flex;
	flex-direction: var(--nav-list-layout, column);
	flex-wrap: wrap;
	gap: 0.9rem;
	height: var(--nav-list-height, 100vh);
	list-style: none;
	margin: 0;
	padding: var(--nav-list-padding, 2rem);
	position: var(--nav-list-position, fixed);
	inset-block-start: 0; /* Logical property. Equivalent to top: 0; */
	inset-inline-end: 0; /* Logical property. Equivalent to right: 0; */
	width: var(--nav-list-width, min(22rem, 100vw));
	visibility: var(--nav-list-visibility, visible);
}

/* animates ul only when opening to avoid flash on page load, svg always */
@media (prefers-reduced-motion: no-preference) {
	.site-head [aria-expanded='true'] + ul,
	nav.navbar svg {
		transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55),
			visibility 0.05s linear;
	}
}

[aria-expanded='false'] + ul {
	transform: var(--nav-list-transform, translateX(100%));
	visibility: var(--nav-list-visibility, hidden);
}

.site-head [aria-expanded='true'] svg {
	transform: var(--nav-list-rotate, rotate(45deg));
}

/* Basic link styling */
.site-head a {
	--text-color: var(--color-shades-dark);

	border-block-end: 3px solid var(--border-color, transparent);
	color: var(--text-color);
	padding: 0.1rem;
	text-decoration: none;
}

/* Change the border-color on :hover and :focus */
.site-head a:where(:hover, :focus) {
	--border-color: var(--color-shades-dark);
}

/* Change border-color and color for the active page */
[aria-current='page'] {
	--border-color: var(--color-primary);
	--text-color: var(--color-dark);
}

/* Reset button styling */
button {
	all: unset;
	display: var(--nav-button-display, flex);
	position: relative;
	z-index: 1;
	cursor: pointer;
}
